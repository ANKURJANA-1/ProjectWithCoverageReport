plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
}
apply plugin:'jacoco'
jacoco {
    toolVersion = '0.7.1.201405082137' //Use latest version
    reportsDir = file("$buildDir/reports/jacoco")
}

def androidExclusion = [
        '**/databinding/**/*.*',
        '**/android/databinding/*Binding.*',
        '**/BR.*',
        '**/R.*',
        '**/R$*.*',
        '**/BuildConfig.*',
        '**/Manifest*.*',
        '**/*_MembersInjector.*',
        '**/Dagger*Component.*',
        '**/Dagger*Component$Builder.*',
        '**/*Module_*Factory.*',
        '**/*Fragment*.*',
        '**/*Activity*.*',
        '**/*Adapter*.*',
        '**/*ViewPager*.*',
        '**/*ViewHolder*.*',
        '**/*Module*.*'
]



tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    //jacoco.excludes = ['jdk.internal.*']
}
////('testMockDebugUnitTest', 'createMockDebugCoverageReport'), dependsOn: ['testDebugUnitTest']
task jacocoTestReport(type: JacocoReport,dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        csv.enabled false
        xml.enabled false
        html.enabled false
    }


    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: androidExclusion )
    def mainSrc = "${project.projectDir}/src/main/java"


    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugTree]))
    getExecutionData().setFrom(fileTree(dir: "$buildDir", includes: [
            'jacoco/tesDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/**/*.ec']))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.keyboard"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        //testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.example.keyboard.testModule.CustomHiltTestRunner"
    }
    jacoco{
        version '0.7.1.201405082137'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//

//    androidTestImplementation 'androidx.test:core:1.4.0'
//    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
//    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'
//    androidTestImplementation 'androidx.test:runner:1.4.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.4.0'
//    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
    androidTestImplementation "com.google.truth:truth:1.1.2"

     //For instrumented tests.
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.35.1'
     //...with Kotlin.
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.35.1'




    //hilt
    implementation 'com.google.dagger:hilt-android:2.35.1'
    androidTestImplementation 'androidx.test:rules:1.4.0'
    kapt 'com.google.dagger:hilt-compiler:2.35.1'

    //remittance utils
    implementation 'com.remittance.sdks:utils:0.0.1'
    //0.0.1
    //remittance contracts
    implementation 'com.remittance.sdks:contracts:0.0.2'
    //0.0.2
    //remittance apis
    implementation 'com.remittance.sdks:apis:0.0.1'
    //0.0.1
    //keyboard height provider
    implementation 'com.sagar:heightprovider:0.0.1'



}